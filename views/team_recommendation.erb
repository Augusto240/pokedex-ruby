<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Equipe Recomendada - Pokédex Ruby</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/teams.css">
    <link rel="stylesheet" href="/css/nav-menu.css">
  <script src="/js/nav-menu.js" defer></script>
  <style>
    .recommendation-container {
      background-color: var(--card-color);
      border-radius: 12px;
      box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
      padding: 30px;
      margin-bottom: 30px;
    }
    
    .base-pokemon {
      text-align: center;
      margin-bottom: 30px;
    }
    
    .base-pokemon img {
      width: 150px;
      height: 150px;
      object-fit: contain;
    }
    
    .recommendation-title {
      text-align: center;
      margin-bottom: 20px;
      font-size: 1.5em;
      color: var(--primary-color);
    }
    
    .recommended-team {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
      gap: 20px;
      margin-top: 30px;
    }
    
    .recommended-pokemon {
      background-color: var(--background-color);
      border-radius: 12px;
      padding: 15px;
      text-align: center;
      transition: transform 0.3s;
    }
    
    .recommended-pokemon:hover {
      transform: translateY(-5px);
    }
    
    .recommended-pokemon img {
      width: 120px;
      height: 120px;
      object-fit: contain;
    }
    
    .recommended-pokemon h3 {
      margin: 10px 0 5px;
      font-size: 1.2em;
    }
    
    .type-tags {
      display: flex;
      justify-content: center;
      gap: 5px;
      margin-top: 8px;
    }
    
    .actions {
      display: flex;
      justify-content: center;
      gap: 15px;
      margin-top: 30px;
    }
    
    .recommendation-explanation {
      background-color: var(--background-color);
      border-radius: 8px;
      padding: 15px;
      margin-top: 20px;
      font-size: 0.9em;
      line-height: 1.5;
    }
  </style>
</head>
<body>
  <%= erb :_header %>
  <div class="back-button">
    <a href="/pokemon/<%= @base_pokemon['name'] %>" title="Voltar para o Pokémon">
      <i class="fas fa-arrow-left"></i>
    </a>
  </div>

  <div class="container">
    <header>
      <h1>Equipe Recomendada</h1>
    </header>

    <div class="recommendation-container">
      <div class="base-pokemon">
        <img src="<%= @base_pokemon['sprites']['other']['official-artwork']['front_default'] %>" alt="<%= @base_pokemon['name'] %>">
        <h2><%= @base_pokemon['name'].capitalize %></h2>
        <div class="type-tags">
          <% @base_pokemon['types'].each do |type| %>
            <span class="type-badge <%= type['type']['name'] %>">
              <%= type['type']['name'].capitalize %>
            </span>
          <% end %>
        </div>
      </div>

      <p class="recommendation-explanation">
        Nossa IA analisou as forças e fraquezas de <%= @base_pokemon['name'].capitalize %> 
        e recomendou os seguintes Pokémon para formar uma equipe equilibrada:
      </p>

      <h3 class="recommendation-title">Pokémon Recomendados</h3>
      
      <div class="recommended-team">
        <% @recommended_team.each do |pokemon| %>
          <div class="recommended-pokemon">
            <img src="<%= pokemon['sprites']['other']['official-artwork']['front_default'] %>" alt="<%= pokemon['name'] %>">
            <h3><%= pokemon['name'].capitalize %></h3>
            <div class="type-tags">
              <% pokemon['types'].each do |type| %>
                <span class="type-badge <%= type['type']['name'] %>">
                  <%= type['type']['name'].capitalize %>
                </span>
              <% end %>
            </div>
            <div class="pokemon-actions">
              <a href="/pokemon/<%= pokemon['name'] %>" class="btn-secondary btn-sm">Detalhes</a>
            </div>
          </div>
        <% end %>
      </div>

      <div class="actions">
        <a href="/pokemon/<%= @base_pokemon['name'] %>" class="btn-secondary">
          <i class="fas fa-arrow-left"></i> Voltar
        </a>
        
        <button id="create-team-btn" class="btn-primary">
          <i class="fas fa-save"></i> Salvar como Equipe
        </button>
      </div>
    </div>
  </div>

  <div id="team-modal" class="modal hidden">
    <div class="modal-content">
      <h3>Salvar Equipe</h3>
      <form id="save-team-form">
        <div class="form-group">
          <label for="team-name">Nome da Equipe:</label>
          <input type="text" id="team-name" name="team-name" required placeholder="Ex: Equipe do <%= @base_pokemon['name'].capitalize %>">
        </div>
        <div class="form-actions">
          <button type="button" id="cancel-save" class="btn-secondary">Cancelar</button>
          <button type="submit" class="btn-primary">Salvar</button>
        </div>
      </form>
    </div>
  </div>

  <div class="theme-toggle">
    <i class="fas fa-moon"></i>
  </div>

  <script src="/js/theme.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const createTeamBtn = document.getElementById('create-team-btn');
      const teamModal = document.getElementById('team-modal');
      const cancelSaveBtn = document.getElementById('cancel-save');
      const saveTeamForm = document.getElementById('save-team-form');
            
      createTeamBtn.addEventListener('click', function() {
        teamModal.classList.remove('hidden');
      });
            
      cancelSaveBtn.addEventListener('click', function() {
        teamModal.classList.add('hidden');
      });
            
      saveTeamForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const teamName = document.getElementById('team-name').value;
        
        try {      
          const createTeamResponse = await fetch('/teams', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              name: teamName
            })
          });
          
          const teamData = await createTeamResponse.json();
          
          if (teamData.success) {
            const teamId = teamData.team_id;
                        
            await fetch(`/api/teams/${teamId}/pokemon`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                pokemon_id: <%= @base_pokemon['id'] %>,
                position: 1
              })
            });
                                  
            let position = 2;
            for (const pokemon of <%= @recommended_team.map { |p| p['id'] }.to_json %>) {
              if (position <= 6) {
                await fetch(`/api/teams/${teamId}/pokemon`, {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify({
                    pokemon_id: pokemon,
                    position: position
                  })
                });
                position++;
              }
            }
                        
            window.location.href = `/teams/${teamId}`;
          } else {
            alert('Erro ao criar equipe: ' + (teamData.error || 'Erro desconhecido'));
          }
        } catch (error) {
          console.error('Erro ao salvar equipe:', error);
          alert('Erro ao salvar a equipe. Por favor, tente novamente.');
        }
      });
    });
  </script>
</body>
</html>